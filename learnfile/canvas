
1、void setStyle (Paint.Style style)     设置填充样式
Paint.Style.FILL    :填充内部
Paint.Style.FILL_AND_STROKE  ：填充内部和描边
Paint.Style.STROKE  ：仅描边

2、setShadowLayer (float radius, float dx, float dy, int color)    添加阴影
参数：
radius:阴影的倾斜度
dx:水平位移
dy:垂直位移
使用代码：




//        5、矩形工具类RectF与Rect
//        这两个都是矩形辅助类，区别不大，用哪个都行，根据四个点构建一个矩形结构；在画图时，利用这个矩形结构可以画出对应的矩形或者与其它图形Region相交、相加等等；
//        RectF：
//        构造函数有下面四个，但最常用的还是第二个，根据四个点构造出一个矩形；
//        RectF()
//        RectF(float left, float top, float right, float bottom)
//        RectF(RectF r)
//        RectF(Rect r)
//        Rect
//        构造函数如下，最常用的也是根据四个点来构造矩形
//        Rect()
//        Rect(int left, int top, int right, int bottom)
//        Rect(Rect r)
//        6、矩形
//        void drawRect (float left, float top, float right, float bottom, Paint paint)
//        void drawRect (RectF rect, Paint paint)
//        void drawRect (Rect r, Paint paint)
//        参数：
//        第一个的写法是直接传入矩形的四个点，画出矩形
//        第二、三个构造函数是根据传入RectF或者Rect矩形变量来指定所画的矩形的

//        7、圆角矩形
//        void drawRoundRect (RectF rect, float rx, float ry, Paint paint)
//        参数：
//        RectF rect:要画的矩形
//        float rx:生成圆角的椭圆的X轴半径
//        float ry:生成圆角的椭圆的Y轴半径

//        8、圆形
//        void drawCircle (float cx, float cy, float radius, Paint paint)

//        9、椭圆
//        椭圆是根据矩形生成的，以矩形的长为椭圆的X轴，矩形的宽为椭圆的Y轴，建立的椭圆图形
//        void drawOval (RectF oval, Paint paint)

//        10、弧
//        弧是椭圆的一部分，而椭圆是根据矩形来生成的，所以弧当然也是根据矩形来生成的；
//        void drawArc (RectF oval, float startAngle, float sweepAngle, boolean useCenter, Paint paint)
//        参数：
//        RectF oval:生成椭圆的矩形
//        float startAngle：弧开始的角度，以X轴正方向为0度
//        float sweepAngle：弧持续的角度
//        boolean useCenter:是否有弧的两边，True，还两边，False，只有一条弧

-------------------------------------------------
void drawPath (Path path, Paint paint)

1、直线路径
void moveTo (float x1, float y1):直线的开始点；即将直线路径的绘制点定在（x1,y1）的位置；
void lineTo (float x2, float y2)：直线的结束点，又是下一次绘制直线路径的开始点；lineTo（）可以一直用；
void close ():如果连续画了几条直线，但没有形成闭环，调用Close()会将路径首尾点连接起来，形成闭环；

void addRect (float left, float top, float right, float bottom, Path.Direction dir)
void addRect (RectF rect, Path.Direction dir)

2、矩形路径
void addRect (float left, float top, float right, float bottom, Path.Direction dir)
void addRect (RectF rect, Path.Direction dir)
这里Path类创建矩形路径的参数与上篇canvas绘制矩形差不多，唯一不同的一点是增加了Path.Direction参数；
Path.Direction有两个值：
Path.Direction.CCW：是counter-clockwise缩写，指创建逆时针方向的矩形路径；
Path.Direction.CW：是clockwise的缩写，指创建顺时针方向的矩形路径；

3、圆角矩形路径
void addRoundRect (RectF rect, float[] radii, Path.Direction dir)
void addRoundRect (RectF rect, float rx, float ry, Path.Direction dir)
这里有两个构造函数，部分参数说明如下：
第一个构造函数：可以定制每个角的圆角大小：
float[] radii：必须传入8个数值，分四组，分别对应每个角所使用的椭圆的横轴半径和纵轴半径，如｛x1,y1,x2,y2,x3,y3,x4,y4｝，其中，x1,y1对应第一个角的（左上角）用来产生圆角的椭圆的横轴半径和纵轴半径，其它类推……
第二个构造函数：只能构建统一圆角大小
float rx：所产生圆角的椭圆的横轴半径；
float ry：所产生圆角的椭圆的纵轴半径；

4、圆形路径
void addCircle (float x, float y, float radius, Path.Direction dir)
参数说明：
float x：圆心X轴坐标
float y：圆心Y轴坐标
float radius：圆半径

5、椭圆路径
void addOval (RectF oval, Path.Direction dir)
参数说明：
RectF oval：生成椭圆所对应的矩形
Path.Direction :生成方式，与矩形一样，分为顺时针与逆时针，意义完全相同，不再重复

6、弧形路径
void addArc (RectF oval, float startAngle, float sweepAngle)
参数：
RectF oval：弧是椭圆的一部分，这个参数就是生成椭圆所对应的矩形；
float startAngle：开始的角度，X轴正方向为0度
float sweepAngel：持续的度数；

文字
//普通设置
paint.setStrokeWidth (5);//设置画笔宽度
paint.setAntiAlias(true); //指定是否使用抗锯齿功能，如果使用，会使绘图速度变慢
paint.setStyle(Paint.Style.FILL);//绘图样式，对于设文字和几何图形都有效
paint.setTextAlign(Align.CENTER);//设置文字对齐方式，取值：align.CENTER、align.LEFT或align.RIGHT
paint.setTextSize(12);//设置文字大小

//样式设置
paint.setFakeBoldText(true);//设置是否为粗体文字
paint.setUnderlineText(true);//设置下划线
paint.setTextSkewX((float) -0.25);//设置字体水平倾斜度，普通斜体字是-0.25
paint.setStrikeThruText(true);//设置带有删除线效果

//其它设置
paint.setTextScaleX(2);//只会将水平方向拉伸，高度不会变











